name: Dependabot Auto Test, Bump & Publish

permissions:
  contents: write # to be able to publish a GitHub release
  issues: write # to be able to comment on released issues
  pull-requests: write # to be able to comment on released pull requests
  id-token: write # to enable use of OIDC for npm provenance

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - main

jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          always-auth: true
          node-version: "20.8.1"
          cache: "npm"
      - run: corepack enable && corepack prepare yarn@4.9.1 --activate
      - run: yarn install --immutable
      - run: yarn test:build

  bump-and-publish:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test-build
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      # Unexpected input(s) 'foo', valid inputs are ['always-auth', 'node-version', 'node-version-file', 'architecture', 'check-latest', 'registry-url', 'scope', 'token', 'cache', 'cache-dependency-path', 'mirror', 'mirror-token']
        with:
          #always-auth: true
          node-version: '20.8.1'
          registry-url: 'https://registry.npmjs.org/'
          #scope: variablesoftware
          #token: ${{secrets.NPM_TOKEN}}
      #- run: npm config set //registry.npmjs.org/:_authToken "$NPM_TOKEN"
      #- run: npm install --global corepack@latest
      - run: corepack enable && corepack prepare yarn@4.9.1 --activate
      - run: yarn --version
      - run: yarn install --immutable
      #- run: cat /home/runner/work/_temp/.npmrc
      - run: yarn add -D husky
      - run: yarn npm whoami --scope ${{secrets.scope}} --publish 
      - run: yarn npm publish --provenance --access public
      - run: yarn dlx semantic-release --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SCOPE: ${{secrets.scope}}
          NODE_AUTH_TOKEN: ${{ secrets.VS_NPM_TOKEN}}
          NPM_TOKEN: ${{ secrets.VS_NPM_TOKEN}}
